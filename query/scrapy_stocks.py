import datetime, re, time, os, sys, sqlite3, random
import requests
import pandas as pd
import tushare as ts


class LimitUp:
    def __init__(self):
        self.path = os.path.join(os.path.dirname(__file__), 'data')
        self.header = {
            "Host": "q.jrjimg.cn",
            "Referer": "http://summary.jrj.com.cn/hybk/index.shtml",
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36"
        }
        self.columns = ['模块名称', '平均价格', '涨跌幅', '成交量(手)', '成交额(亿)', '涨跌家数', '最大贡献个数', '最新价', '涨跌幅']

    # 要爬取的js地址
    def getUrl(self, date):
        return 'http://q.jrjimg.cn/?q=cn|bk|17&n=hqa&c=l&o=pl,d&p=1020&' + '_dc=' + str(
            int(round(time.time() * 1000)))

    # 请求原始内容
    def getData(self, date, retry=5):
        req = requests.get(self.getUrl(date), headers=self.header)
        for i in range(retry):
            try:
                content = str(req.text).strip()
                md_check = re.findall(r'"HqData":\[\[', content)
                if content:
                    return content
                else:
                    time.sleep(60)
                    print('failed to get content, retry: {}'.format(i))
                    continue
            except Exception as e:
                print(e)
                time.sleep(60)
                continue
        return None

    # 将原始内容转化为json
    def convertToJson(self, content):
        p = re.compile("HqData:(.*)};", re.S)
        if len(content) <= 0:
            print('Content\'s length is 0')
            exit(0)
        result = p.findall(content)
        if result:
            try:
                t1 = result[0]
                t2 = list(eval(t1))
                return t2
            except Exception as e:
                print(e)
                return None
        else:
            return None

    # 保存数据至csv文件和sqlite数据库
    def saveData(self, data, date):
        if not data:
            exit()
        df = pd.DataFrame(data)
        filename = os.path.join(self.path, "plate_change" + ".csv")
        df.to_csv(filename)
        # try:
        #     df.to_sql(date, sqlite3.connect(os.path.join(os.path.dirname(__file__), 'db_limit_up.db')),
        #               if_exists='fail')
        # except Exception as e:
        #     print(e)

    # 爬取、保存数据
    def crawlData(self, startDate, endDate):
        date_list = [datetime.datetime.strftime(i, '%Y%m%d') for i in list(pd.date_range(startDate, endDate))]
        for date in date_list:
            # if not ts.is_holiday(datetime.datetime.strptime(date,'%Y%m%d').strftime('%Y-%m-%d')):
            print(date)
            content = self.getData(date)
            json = self.convertToJson(content)
            self.saveData(json, date)
            time.sleep(5)
        # else:
        #     print('Holiday')


if __name__ == '__main__':
    lu = LimitUp()
    start = '20210126'
    end = datetime.datetime.strftime(datetime.datetime.now(), '%Y%m%d')
    if len(sys.argv) > 1:
        start = sys.argv[1]
    if len(sys.argv) > 2:
        end = sys.arv[2]
    lu.crawlData(start, end)
#     content = '''HqData:[
# ["bk400128951","400128951","互联网传媒",20210127113005,11.28,11.34,11.84,12883551,1447551.04,0.55,4.91,20210127113003,17,61,51,2,8,"sz300459","300459","金科文化",3.92,2455802,90235.78,0.59,17.72],
# ["bk400128878","400128878","塑料",20210127113005,9.74,9.07,10.04,3523542,465199.79,0.30,3.09,20210127113003,17,34,17,3,14,"sh600143","600143","金发科技",28.40,1139913,305605.10,2.13,8.11],
# ["bk400128949","400128949","文化传媒",20210127113005,6.33,6.34,6.52,5309018,446286.72,0.19,3.03,20210127113003,17,75,66,2,7,"sh603721","603721","中广天择",11.81,23389,2672.33,1.07,9.96],
# ["bk400128937","400128937","景点",20210127113005,11.36,11.38,11.69,410076,60019.01,0.33,2.88,20210127113003,17,12,10,1,1,"sz300859","300859","西域旅游",17.21,51349,8713.51,0.87,5.32],
# ["bk400128922","400128922","畜禽养殖",20210127113005,30.53,30.57,31.32,1392730,567267.04,0.79,2.58,20210127113000,17,13,3,0,10,"sz002714","002714","牧原股份",92.00,449142,413183.92,4.60,5.26],
# ["bk400128901","400128901","运输设备",20210127113005,6.46,6.43,6.62,3570240,267502.73,0.16,2.54,20210127113003,17,16,9,0,7,"sh601766","601766","中国中车",6.79,2920957,197371.87,0.24,3.66],
# ["bk400128875","400128875","化学原料",20210127113005,6.50,6.57,6.61,7793800,574652.86,0.11,1.64,20210127113002,17,41,28,1,12,"sh601216","601216","君正集团",4.85,3046842,145638.74,0.44,9.98],
# ["bk400128950","400128950","营销传播",20210127113005,7.68,7.68,7.80,7243099,468445.59,0.12,1.50,20210127113003,17,37,32,0,5,"sz300781","300781","因赛集团",34.93,76071,25181.39,4.57,15.05],
# ["bk400128968","400128968","银行",20210127113005,6.01,6.02,6.09,20451304,1760357.81,0.08,1.25,20210127113002,17,38,34,2,2,"sh600908","600908","无锡银行",6.42,1039589,67625.77,0.34,5.59],
# ["bk400128895","400128895","电源设备",20210127113005,27.76,27.82,28.10,14563816,3993725.74,0.34,1.21,20210127113003,17,77,42,2,33,"sh601218","601218","吉鑫科技",4.60,593169,26912.97,0.37,8.75],
# ["bk400128961","400128961","航空运输",20210127113005,5.50,5.49,5.55,2320288,124012.84,0.05,0.97,20210127113001,17,10,7,0,3,"sh600221","600221","海航控股",1.52,1206586,18342.76,0.05,3.40],
# ["bk400128934","400128934","专业零售",20210127113005,7.68,7.66,7.75,2372883,227536.02,0.07,0.91,20210127113003,17,12,5,3,4,"sz002127","002127","南极电商",9.53,1230089,114002.92,0.87,10.05],
# ["bk400128902","400128902","航天装备",20210127113005,20.65,20.36,20.83,1380392,330765.04,0.18,0.88,20210127113003,17,16,7,1,8,"sz300034","300034","钢研高纳",32.37,92620,29265.93,1.62,5.27],
# ["bk400128957","400128957","环保工程及服务",20210127113005,7.06,7.05,7.12,2641431,188752.73,0.06,0.82,20210127113003,17,56,31,8,17,"sz300152","300152","科融环境",4.17,724166,29090.59,0.49,13.32],
# ["bk400128918","400128918","林业",20210127113005,4.04,4.02,4.07,90165,2635.18,0.03,0.73,20210127112939,17,3,2,0,1,"sh600265","600265","ST景谷",18.08,456,81.62,0.28,1.57],
# ["bk400128954","400128954","电力",20210127113005,5.74,5.73,5.78,11524711,720942.38,0.04,0.71,20210127113003,17,79,41,7,31,"sz003035","003035","南网能源",3.58,11055,395.77,0.33,10.15],
# ["bk400128912","400128912","造纸",20210127113005,8.24,8.25,8.30,4429489,378396.06,0.06,0.68,20210127113002,17,26,18,1,7,"sh600235","600235","民丰特纸",6.16,383644,23113.38,0.56,10.00],
# ["bk400128953","400128953","通信设备",20210127113005,12.32,12.25,12.40,4501042,656829.60,0.08,0.66,20210127113003,17,103,51,4,47,"sz300252","300252","金信诺",7.77,312484,24685.02,0.80,11.48],
# ["bk400128892","400128892","园林工程",20210127113005,3.79,3.80,3.82,799401,28996.36,0.02,0.66,20210127113000,17,24,12,4,8,"sh603007","603007","花王股份",5.07,22177,1111.92,0.27,5.63],
# ["bk400128905","400128905","船舶制造",20210127113005,6.77,6.80,6.81,1235679,121026.00,0.04,0.60,20210127113003,17,11,6,2,3,"sz300008","300008","天海防务",5.43,431945,22474.14,0.31,6.05]
# ]};'''
#     # content = content.replace("space","")
#     content = content.replace("\n", "")
#     print(content)
#     re = re.compile("HqData:(.*)};", re.S)
#     data = re.findall(content)
#     t1 = data[0]
#     t2 = list(eval(t1))
#     print(data)
